package com.eyse360.gui;

import com.eyse360.controllers.mysql.TableDAO;
import com.eyse360.models.Bar;
import com.eyse360.models.BarUser;
import com.eyse360.models.Check;
import com.eyse360.models.Product;
import com.eyse360.models.Table;
import com.eyse360.tools.Tools;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Map;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Erel
 */
public class TableContentFrame extends javax.swing.JFrame {
    private static TableDAO tableDAO;
    private static Bar currentBar;
    public static Check currentCheck;
    private static Table currentTable;
    private static BarUser currentUser;
    public static CheckLogTableModel tableModel;
    
    public TableContentFrame() {
        initComponents();
    }

    public TableContentFrame(Table table, BarUser user) {
        currentTable = table;
        tableDAO = new TableDAO();
        currentBar = BarFrame.currentBar;
        currentUser = user;
        
        initComponents();
        
        AddProductButton.setEnabled(false);
        CustomerCountTextField.setEnabled(false);
        DecrementQuantity.setEnabled(false);
        IncrementQuantity.setEnabled(false);
        RemoveFromTableButton.setEnabled(false);
        TotalTextField.setEnabled(false);
        TotalTimeTextField.setEnabled(false);
        UpdateCustomerCountButton.setEnabled(false);
        
        TableNameLabel.setText(currentTable.getName());
        
        currentCheck = tableDAO.getOpenCheckDetailByTable(currentTable);
        tableModel = new CheckLogTableModel();
        if (currentCheck != null) {
            if (currentCheck.isIsOpen()) {
                OpenCloseCheckButton.setText("Close");
                AddProductButton.setEnabled(true);
                CustomerCountTextField.setEnabled(true);
                CustomerCountTextField.setText(String.valueOf(currentTable.getCustomerCount()));

                DecrementQuantity.setEnabled(true);
                IncrementQuantity.setEnabled(true);

                RemoveFromTableButton.setEnabled(true);
                
                DateFormat dateFormat = new SimpleDateFormat("dd-MM-YYYY hh:mm:ss");  
                TotalTimeTextField.setText(dateFormat.format(Tools.setCurrentTime(currentCheck.getTime())));

                UpdateCustomerCountButton.setEnabled(true);
                
                WaiterNameLabel.setText(currentCheck.getWaiter().getFullName());
                
                currentCheck.setProducts(tableDAO.getTableProducts(currentCheck));
                tableModel = new CheckLogTableModel(currentCheck.getProducts());

                tableModel.addTableModelListener(new TableModelListener() {
                    public void tableChanged(TableModelEvent e) {
                        double sum = 0;
                        if (currentCheck.getProducts() != null) {
                            for (Map.Entry<Product, Integer> entry: currentCheck.getProducts().entrySet()) {
                                sum += entry.getKey().getPrice() * entry.getValue();
                            }
                        }

                        TotalTextField.setText(String.valueOf(sum));
                    }
                });
                tableModel.fireTableDataChanged();                
            }
        }

        CheckLogTable.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TableNameLabel = new javax.swing.JLabel();
        CustomerCountLabel = new javax.swing.JLabel();
        TotalTimeLabel = new javax.swing.JLabel();
        WaiterNameLabel = new javax.swing.JLabel();
        CustomerCountTextField = new javax.swing.JTextField();
        TotalTimeTextField = new javax.swing.JTextField();
        IncrementQuantity = new javax.swing.JButton();
        DecrementQuantity = new javax.swing.JButton();
        TableInfoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CheckLogTable = new javax.swing.JTable();
        AddProductButton = new javax.swing.JButton();
        QuantityLabel = new javax.swing.JLabel();
        RemoveFromTableButton = new javax.swing.JButton();
        TotalLabel = new javax.swing.JLabel();
        TotalTextField = new javax.swing.JTextField();
        UpdateCustomerCountButton = new javax.swing.JButton();
        OpenCloseCheckButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        TableNameLabel.setText("asdasdsad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        getContentPane().add(TableNameLabel, gridBagConstraints);

        CustomerCountLabel.setText("Customer Count:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(CustomerCountLabel, gridBagConstraints);

        TotalTimeLabel.setText("Open Time:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(TotalTimeLabel, gridBagConstraints);

        WaiterNameLabel.setText("Waiter Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        getContentPane().add(WaiterNameLabel, gridBagConstraints);

        CustomerCountTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(CustomerCountTextField, gridBagConstraints);

        TotalTimeTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(TotalTimeTextField, gridBagConstraints);

        IncrementQuantity.setText("+");
        IncrementQuantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IncrementQuantityMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(IncrementQuantity, gridBagConstraints);

        DecrementQuantity.setText("-");
        DecrementQuantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DecrementQuantityMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(DecrementQuantity, gridBagConstraints);

        TableInfoLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TableInfoLabel.setText("TABLE INFO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 20;
        getContentPane().add(TableInfoLabel, gridBagConstraints);

        CheckLogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Category", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CheckLogTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CheckLogTable.getTableHeader().setReorderingAllowed(false);
        CheckLogTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                CheckLogTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(CheckLogTable);
        CheckLogTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (CheckLogTable.getColumnModel().getColumnCount() > 0) {
            CheckLogTable.getColumnModel().getColumn(0).setHeaderValue("Product");
            CheckLogTable.getColumnModel().getColumn(1).setHeaderValue("Category");
            CheckLogTable.getColumnModel().getColumn(2).setHeaderValue("Quantity");
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        AddProductButton.setText("Add Product");
        AddProductButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddProductButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        getContentPane().add(AddProductButton, gridBagConstraints);

        QuantityLabel.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 20;
        getContentPane().add(QuantityLabel, gridBagConstraints);

        RemoveFromTableButton.setText("Remove");
        RemoveFromTableButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveFromTableButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        getContentPane().add(RemoveFromTableButton, gridBagConstraints);

        TotalLabel.setText("Total:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(TotalLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(TotalTextField, gridBagConstraints);

        UpdateCustomerCountButton.setText("Update");
        UpdateCustomerCountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateCustomerCountButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        getContentPane().add(UpdateCustomerCountButton, gridBagConstraints);

        OpenCloseCheckButton.setText("Open");
        OpenCloseCheckButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpenCloseCheckButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        getContentPane().add(OpenCloseCheckButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IncrementQuantityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IncrementQuantityMouseClicked
        Product p = (Product) tableModel.getValueAt(CheckLogTable.getSelectedRow(),0);
        tableDAO.addProductToCheck(p, currentCheck, 1);
        tableModel.addRow(p, 1);
        tableModel.fireTableDataChanged();
    }//GEN-LAST:event_IncrementQuantityMouseClicked

    private void DecrementQuantityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DecrementQuantityMouseClicked
        Product p = (Product) tableModel.getValueAt(CheckLogTable.getSelectedRow(), 0);
        tableDAO.addProductToCheck(p, currentCheck, -1);
        tableModel.addRow(p, -1);
        tableModel.fireTableDataChanged();
    }//GEN-LAST:event_DecrementQuantityMouseClicked

    private void AddProductButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductButtonMouseClicked
        SelectProductFrame spf = new SelectProductFrame(currentTable, currentBar, currentCheck);
        spf.setVisible(true);
    }//GEN-LAST:event_AddProductButtonMouseClicked

    private void RemoveFromTableButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveFromTableButtonMouseClicked
        Product p = (Product) tableModel.getValueAt(CheckLogTable.getSelectedRow(), 0);
        tableDAO.removeProductFromCheck(p, currentCheck);
        tableModel.removeRow(p);
    }//GEN-LAST:event_RemoveFromTableButtonMouseClicked

    private void UpdateCustomerCountButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateCustomerCountButtonMouseClicked
        currentTable.setCustomerCount(Integer.parseInt(CustomerCountTextField.getText()));
        tableDAO.update(currentTable);
    }//GEN-LAST:event_UpdateCustomerCountButtonMouseClicked

    private void CheckLogTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_CheckLogTablePropertyChange
        
    }//GEN-LAST:event_CheckLogTablePropertyChange

    private void OpenCloseCheckButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpenCloseCheckButtonMouseClicked
        if (currentCheck != null) {
            if (currentCheck.isIsOpen()) {
                tableDAO.closeCheck(currentTable);
                dispose();
            }
        } else {
            tableDAO.openCheck(currentTable, currentUser);
            
            currentCheck = tableDAO.getOpenCheckDetailByTable(currentTable);
            OpenCloseCheckButton.setText("Close");
            AddProductButton.setEnabled(true);
            CustomerCountTextField.setEnabled(true);
            CustomerCountTextField.setText(String.valueOf(currentTable.getCustomerCount()));

            DecrementQuantity.setEnabled(true);
            IncrementQuantity.setEnabled(true);

            RemoveFromTableButton.setEnabled(true);

            DateFormat dateFormat = new SimpleDateFormat("dd-MM-YYYY hh:mm:ss");  
            TotalTimeTextField.setText(dateFormat.format(Tools.setCurrentTime(currentCheck.getTime())));

            UpdateCustomerCountButton.setEnabled(true);

            WaiterNameLabel.setText(currentCheck.getWaiter().getFullName());

            currentCheck.setProducts(tableDAO.getTableProducts(currentCheck));

            tableModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_OpenCloseCheckButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProductButton;
    private javax.swing.JTable CheckLogTable;
    private javax.swing.JLabel CustomerCountLabel;
    private javax.swing.JTextField CustomerCountTextField;
    private javax.swing.JButton DecrementQuantity;
    private javax.swing.JButton IncrementQuantity;
    private javax.swing.JButton OpenCloseCheckButton;
    private javax.swing.JLabel QuantityLabel;
    private javax.swing.JButton RemoveFromTableButton;
    private javax.swing.JLabel TableInfoLabel;
    private javax.swing.JLabel TableNameLabel;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JTextField TotalTextField;
    private javax.swing.JLabel TotalTimeLabel;
    private javax.swing.JTextField TotalTimeTextField;
    private javax.swing.JButton UpdateCustomerCountButton;
    private javax.swing.JLabel WaiterNameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
